// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Grpc = require("./Grpc.bs.js");
var Util = require("./Util.bs.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Future = require("reason-future/src/Future.bs.js");
var Random = require("bs-platform/lib/js/random.js");
var KafkaNode = require("kafka-node");
var GenericProducer = require("./GenericProducer.bs.js");

var rng = Random.init(Date.now() | 0);

var blankWidgetTopic = "blank-widget";

var zookeeperAddress = Util.getEnvExn("ZOOKEEPER");

var clientIdentifier = "DeliverBlankWidgets.re";

console.log(clientIdentifier, "connecting to zookeeper at ", zookeeperAddress);

var client = new KafkaNode.Client(zookeeperAddress, clientIdentifier);

GenericProducer.make(client, (function (producer) {
        var match = Random.$$float(1.0) < 0.9;
        var blankWidget = Curry._2(Grpc.Assemblyline[/* BlankWidget */2][/* make */2], /* Some */[match ? /* WidgetConditionAdequate */0 : /* WidgetConditionDefective */1], /* () */0);
        console.log("rx:", Util.blankWidgetToString(blankWidget));
        return Future.get(GenericProducer.send(blankWidgetTopic, producer, Curry._1(Grpc.Assemblyline[/* BlankWidget */2][/* encode */5], blankWidget)), (function () {
                      console.log("successfully delivered blank widget!");
                      client.close((function () {
                              console.log("client closed! bye!");
                              return /* () */0;
                            }));
                      return /* () */0;
                    }));
      }));

var K = 0;

var WidgetCondition = 0;

var BlankWidget = 0;

exports.K = K;
exports.WidgetCondition = WidgetCondition;
exports.BlankWidget = BlankWidget;
exports.rng = rng;
exports.blankWidgetTopic = blankWidgetTopic;
exports.zookeeperAddress = zookeeperAddress;
exports.clientIdentifier = clientIdentifier;
exports.client = client;
/* rng Not a pure module */
